//Derived class constructors

#include<iostream>
using namespace std;

class Counter
{
	protected:
		int count;

	public:
	Counter()
	{
		cout<<"Constructor of class Counter  "<<endl;
		count = 0;
	}
	Counter(int c)
	{
	count = c;	
	}
	int get_count()
	{
		return count;
	}

	Counter operator ++ ()
	{
		return Counter(++count);
	}
};

class CountDn : public Counter
{
	public:
	CountDn(): Counter()
	{
		cout<<"Constructor of class CountDn  "<<endl;
	}

	CountDn(int c): Counter(c)
	{

	}

	CountDn operator -- ()
	{
		return CountDn(--count);
	}
};
	
int main()
{
	CountDn c1;
	CountDn c2(100);

	cout<<"\nc1 = "<<c1.get_count();
	cout<<"\nc2 = "<<c2.get_count();


	++c1; ++c1; ++c1;
	count<<"\nc1 = "<<c1.get_count();
	
	--c2; --c2; 
	cout<<"\nc1 = "<<c1.get_count();
	cout<<endl;
	return 0;	
}

